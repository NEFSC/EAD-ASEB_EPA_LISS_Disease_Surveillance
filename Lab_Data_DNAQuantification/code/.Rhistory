library("lubridate")
library("purrr")
library("reshape2")
library("stringr")
library("RColorBrewer")
library("tidyr")
#data_all <- list.files(path = "Lab_Data_TissueProcessing/raw_data/Files_by_Month",                           # Identify all CSV files
# pattern = "*.csv", full.names = TRUE) %>%
#lapply(read_csv) %>%   # Store all files in list
#  bind_rows          # Combine data sets into one data set
#data_all                                            # Print data to RStudio console
#as.data.frame(data_all)  # Convert tibble to data.frame
#Filtering NAs and unnecessary columns
#data_all <- data_all %>% filter(!is.na(date_collected))
#data_all <- select(data_all, -light_regime, -oyster_zone)
#write.csv(data_all, "Master_files/tissue_processing_all_data.csv", row.names=FALSE)
##### USE THIS CODE TO MERGE DATA FILES - some of the files have columns that are not the same format (dates specifically), which was causing issues in merging. This code below should solve that problem. It converts all date columns to dates and m/d/y format #####
file_paths <- list.files(path = "Lab_Data_TissueProcessing/raw_data/Files_by_Month",
pattern = "*.csv", full.names = TRUE)
data_all <- lapply(file_paths, function(file_path) {
read_csv(file_path) %>%
mutate(
date_collected = as.Date(date_collected,format = "%m/%d/%Y"),
date_processed = as.Date(date_processed,format = "%m/%d/%Y"),
date_davidsons = as.Date(date_davidsons,format = "%m/%d/%Y"),
date_etoh = as.Date(date_etoh,format = "%m/%d/%Y")
)
}) %>%
bind_rows
as.data.frame(data_all)  # Convert tibble to data.frame
data_all <- data_all %>% filter(!is.na(date_collected))
data_all <- select(data_all, -light_regime, -oyster_zone)
View(data_all)
write.csv(data_all, "Master_files/tissue_processing_all_data.csv", row.names=FALSE)
data_all <- data_all %>% dplyr::mutate(date_collected= as.Date(date_collected), month = month(date_collected))
data_all <- data_all %>% dplyr::mutate(date_collected= as.Date(date_collected), year = year(date_collected))
#changing numeric month to month name
data_all$month <- factor(data_all$month, levels = c("1","2","3","4","5","6","7", "8", "9", "10", "11", "12"),
labels=c("Jan","Feb", "March","April","May", "June", "July", "Aug", "Sept", "Oct", "Nov", "Dec"))
data_all
data_all<- data_all %>%
dplyr::mutate(condition_score = recode(condition, "1_very_good" = 1, "2_good" = 2, "3_good_minus"= 3, "4_fair_plus"= 4, "5_fair"= 5,"6_fair_minus"=6,"7_poor_plus"=7, "8_poor"= 8, "9_very_poor"= 9))
head(data_all)
data_all <- data_all %>%
subset(lab_id != "0723LAUR_20") %>%
subset(lab_id != "0723LAUR_26")
data_all
st_height <- summarySE(data_all%>% filter(!is.na(height_mm)), measurevar="height_mm", groupvars=c("site", "date_collected"))
st_height
#Calculate completeness for QC
st_height$Completeness <- st_height$N /30
st_height
write.csv(st_height, "Lab_Data_TissueProcessing/output\\Completeness_tissue_processing_data.csv", row.names=FALSE)
ggplot(data=data_all, aes(x=site, y=height_mm, fill=site)) +
geom_boxplot()+  #scale_fill_manual(values=c("forestgreen","orange", "purple"))+
theme_bw() +  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
#theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
labs(title="Mean Shell Height ", x ="site", y = "Mean Shell Height (mm)") + facet_wrap(.~year)
ggplot(data=data_all, aes(x=site, y=condition_score, fill=site)) +
geom_boxplot()+  #scale_fill_manual(values=c("forestgreen","orange", "purple"))+
theme_bw() +  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
#theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
labs(title="Mean Condition Score ", x ="site", y = "Mean Body Condition Score")+ scale_y_reverse()+ facet_wrap(.~year)
mean_body_condition <- data_all %>%
dplyr::group_by(site, month, year)%>%
dplyr::summarize(mean_bsc = mean(condition_score, na.rm = TRUE))
mean_body_condition
#for overlay graph
#mean_bcs_ashc <- mean_body_condition %>%
#filter(site == "ASHC") %>%
#filter(year == "2024")
#Mean body condtion scores - 2023
data_2023 <- data_all%>%  filter(year=="2023")
ggplot(data=data_2023, aes(x=month, y=condition_score, group = month, fill = site)) +
geom_boxplot()+
theme_bw() +  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
theme(axis.text.x = element_text(angle = -35, vjust = 0.5, hjust=1))+
labs(title="Mean Condition Score - 2023", x ="month", y = "Mean Body Condition Score")+ scale_y_reverse()+facet_wrap(~site)
#Mean body condtion scores - 2024
data_2024 <- data_all%>%  filter(year=="2024")
ggplot(data=data_2024, aes(x=month, y=condition_score, group = month, fill = site)) +
geom_boxplot()+
theme_bw() +  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
theme(axis.text.x = element_text(angle = -35, vjust = 0.5, hjust=1))+
labs(title="Mean Condition Score - 2024", x ="month", y = "Mean Body Condition Score")+ scale_y_reverse()+facet_wrap(~site)
#Mean body condition scores - 2025
data_2025 <- data_all%>%  filter(year=="2025")
ggplot(data=data_2025, aes(x=month, y=condition_score, group = month, fill = site)) +
geom_boxplot()+
theme_bw() +  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
theme(axis.text.x = element_text(angle = -35, vjust = 0.5, hjust=1))+
labs(title="Mean Condition Score - 2025", x ="month", y = "Mean Body Condition Score")+ scale_y_reverse()+facet_wrap(~site)
#Proportions graph Body condition scores - 2023
df_BCS_proportions2023<- data_2023 %>%
mutate(condition_score_numeric = as.numeric(condition_score),condition_score_bin = case_when(condition_score == 1 ~ "1", condition_score == 2 ~"2",condition_score == 3 ~ "3", condition_score == 4 ~"4",condition_score == 5 ~ "5", condition_score == 6 ~"6",condition_score == 7 ~ "7", condition_score == 8 ~"8", condition_score ==9 ~"9", TRUE ~ as.character(condition_score))) %>%
group_by(site, month, year, condition_score_bin) %>% dplyr ::summarise(Count= n()) %>%
ungroup() %>%
mutate(Proportion = Count/sum(Count))
df_BCS_proportions2023<- na.omit(df_BCS_proportions2023)
BCS_proportion_all_2023<- ggplot(data=df_BCS_proportions2023, aes(x=month, y= Proportion, fill=condition_score_bin)) +
geom_bar(width = .5, stat="identity", position = "fill", colour = "black")+
theme_bw() +  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))+
labs(title="Proportion of body condition scores - 2023", x ="month", y = "Proportion of body condition scores ")+ theme(axis.title.y = element_text(size = rel(1.3), angle =90), axis.title.x = element_text(size = rel(1.3), angle = 0))+
theme(axis.text=element_text(size=12))+
scale_fill_brewer(palette = "Blues", direction = -1)+
facet_wrap(~ site)
BCS_proportion_all_2023
#pdf(paste0(path = "Lab_Data_TissueProcessing/output" ,"/all_BCS_proportion_2023.pdf"), height = 7, width = 13)
#print(BCS_proportion_all_2023)
#dev.off()
#Proportions graph Body condition scores - 2024
df_BCS_proportions2024<- data_2024 %>%
mutate(condition_score_numeric = as.numeric(condition_score),condition_score_bin = case_when(condition_score == 1 ~ "1", condition_score == 2 ~"2",condition_score == 3 ~ "3", condition_score == 4 ~"4",condition_score == 5 ~ "5", condition_score == 6 ~"6",condition_score == 7 ~ "7", condition_score == 8 ~"8", condition_score ==9 ~"9", TRUE ~ as.character(condition_score))) %>%
group_by(site, month, year, condition_score_bin) %>% dplyr ::summarise(Count= n()) %>%
ungroup() %>%
mutate(Proportion = Count/sum(Count))
df_BCS_proportions2024<- na.omit(df_BCS_proportions2024)
BCS_proportion_all_2024<- ggplot(data=df_BCS_proportions2024, aes(x=month, y= Proportion, fill=condition_score_bin)) +
geom_bar(width = .5, stat="identity", position = "fill", colour = "black")+
theme_bw() +  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))+
labs(title="Proportion of body condition scores - 2024", x ="month", y = "Proportion of body condition scores ")+ theme(axis.title.y = element_text(size = rel(1.3), angle =90), axis.title.x = element_text(size = rel(1.3), angle = 0))+
theme(axis.text=element_text(size=12))+
scale_fill_brewer(palette = "Blues", direction = -1)+
facet_wrap(~ site)
BCS_proportion_all_2024
#pdf(paste0(path = "Lab_Data_TissueProcessing/output" ,"/all_BCS_proportion_2024.pdf"), height = 7, width = 13)
#print(BCS_proportion_all_2024)
#dev.off()
#Proportions graph Body condition scores - 2025
df_BCS_proportions2025<- data_2025 %>%
mutate(condition_score_numeric = as.numeric(condition_score),condition_score_bin = case_when(condition_score == 1 ~ "1", condition_score == 2 ~"2",condition_score == 3 ~ "3", condition_score == 4 ~"4",condition_score == 5 ~ "5", condition_score == 6 ~"6",condition_score == 7 ~ "7", condition_score == 8 ~"8", condition_score ==9 ~"9", TRUE ~ as.character(condition_score))) %>%
group_by(site, month, year, condition_score_bin) %>% dplyr ::summarise(Count= n()) %>%
ungroup() %>%
mutate(Proportion = Count/sum(Count))
df_BCS_proportions2025<- na.omit(df_BCS_proportions2025)
BCS_proportion_all_2025<- ggplot(data=df_BCS_proportions2025, aes(x=month, y= Proportion, fill=condition_score_bin)) +
geom_bar(width = .5, stat="identity", position = "fill", colour = "black")+
theme_bw() +  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))+
labs(title="Proportion of body condition scores - 2025", x ="month", y = "Proportion of body condition scores ")+ theme(axis.title.y = element_text(size = rel(1.3), angle =90), axis.title.x = element_text(size = rel(1.3), angle = 0))+
theme(axis.text=element_text(size=12))+
scale_fill_brewer(palette = "Blues", direction = -1)+
facet_wrap(~ site)#, scales = "free")
BCS_proportion_all_2025
pdf(paste0(path = "Lab_Data_TissueProcessing/output" ,"/all_BCS_proportion_2025.pdf"), height = 7, width = 13)
print(BCS_proportion_all_2025)
dev.off()
# Proportion per month of intensity scores at three sites during 2023 & 2024 & 2025
df_bcs_proportions_new <- rbind(df_BCS_proportions2023, df_BCS_proportions2024, df_BCS_proportions2025)
df_bcs_proportions_new<- df_bcs_proportions_new %>% filter(!site=="LAUR")
ggplot(data=df_bcs_proportions_new, aes(x=month, y= Proportion, fill=condition_score_bin)) +
geom_bar(width = .5, stat="identity", position = "fill",colour = "black")+
theme_bw() +  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))+
labs(fill ="Body condition scores")+
labs(title="Proportion of body condition scores", x ="month", y = "Proportion")+ theme(axis.title.y = element_text(size = rel(1.3), angle =90), axis.title.x = element_text(size = rel(1.3), angle = 0))+
theme(axis.text=element_text(size=12))+
scale_fill_brewer(palette = "Blues", direction = -1)+
#scale_x_continuous("Month", breaks = c(3,4,5,6,7,8,9,10))+
facet_grid(year ~site)
shell_path <- list.files(path = "Lab_Data_TissueProcessing/raw_data/shell_pathology",                           # Identify all CSV files
pattern = "*.csv", full.names = TRUE) %>%
lapply(read_csv) %>%   # Store all files in list
bind_rows          # Combine data sets into one data set
shell_path <- shell_path %>% filter(!is.na(lab_id))
shell_path <- shell_path %>% select(-c("...14":"...26"))
write.csv(shell_path, "Master_files/shell_pathology_all_data.csv", row.names=FALSE)
#Writing summary for shell pathology
shell_path_summary <- shell_path%>% separate(lab_id, c('Date_Site', 'ID'))
shell_path_summary <- select(shell_path_summary, -c("pathology_notes","ID",))
shell_path_summary$boring_sponge <- as.integer(as.logical(shell_path_summary$boring_sponge))
shell_path_summary$polydora <- as.integer(as.logical(shell_path_summary$polydora))
shell_path_summary$conchiolin_mod_severe <- as.integer(as.logical(shell_path_summary$conchiolin_mod_severe))
shell_path_summary$mud_blister <- as.integer(as.logical(shell_path_summary$mud_blister))
shell_path_summary$pea_crab <- as.integer(as.logical(shell_path_summary$pea_crab))
shell_path_summary$gill_erosion <- as.integer(as.logical(shell_path_summary$gill_erosion))
shell_path_summary$pale_digestive <- as.integer(as.logical(shell_path_summary$pale_digestive))
shell_path_summary$discoloration <- as.integer(as.logical(shell_path_summary$discoloration))
shell_path_summary$horn_add <- as.integer(as.logical(shell_path_summary$horn_add))
shell_path_summary$cyst_abscess <- as.integer(as.logical(shell_path_summary$cyst_abscess))
shell_path_summary$tumor <- as.integer(as.logical(shell_path_summary$tumor))
shell_path_summary$oyster_drill <- as.integer(as.logical(shell_path_summary$oyster_drill))
shell_path_summary$boring_snail <- as.integer(as.logical(shell_path_summary$boring_snail))
shell_path_summary$shell_scarring <- as.integer(as.logical(shell_path_summary$shell_scarring))
shell_path_count<- shell_path_summary %>%
dplyr::group_by(Date_Site) %>%
dplyr::summarize(Sample_count = n(),
Boring_sponge =sum(boring_sponge),
Polydora = sum(polydora),
Conchiolin =sum(conchiolin_mod_severe),
Mud_blister =sum(mud_blister),
Pea_crab =sum(pea_crab),
Gill_erosion =sum(gill_erosion),
Pale_digestive =sum(pale_digestive),
Discoloration =sum(discoloration),
Horn =sum(horn_add),
Cyst =sum(cyst_abscess),
Tumor =sum(tumor),
Oyster_drill =sum(oyster_drill),
Boring_snail =sum(boring_snail),
Shell_scarring =sum(shell_scarring),
Pathogen_count = sum(boring_sponge,polydora,conchiolin_mod_severe, mud_blister, pea_crab,
gill_erosion, pale_digestive, discoloration, horn_add, cyst_abscess,
tumor, oyster_drill, boring_snail, shell_scarring, na.rm = TRUE)) %>%
ungroup()
write.csv(shell_path_count, "Lab_Data_TissueProcessing/output/shell_pathology_counts.csv", row.names=FALSE)
shell_path_summary
df_GOLD<- data_all%>%
filter(site=="GOLD")
df_GOLD <- df_GOLD %>% filter(!is.na(height_mm))
#2023 data
df_GOLD2023 <- df_GOLD%>%  filter(!year=="2024")
#2024 data
df_GOLD2024 <- df_GOLD%>%  filter(!year=="2023")
df_GOLD$height_mm<-as.numeric(df_GOLD$height_mm)
mean_shell_height <- df_GOLD %>% mutate(year = year(date_collected)) %>% group_by(year)%>% dplyr::summarise(mean_height = mean(height_mm)) #summarySE(measurevar="height_mm", groupvars=c("year"))
mean_shell_height
## Shell Height ##
st_height_GOLD <- summarySE(df_GOLD, measurevar="height_mm", groupvars=c("date_collected"))
st_height_GOLD
## Body Condition ##
st_condition_GOLD<- summarySE(df_GOLD, measurevar = "condition_score", groupvars = c("date_collected"))
st_condition_GOLD
GOLD_BCS_proportions<- df_GOLD %>%
mutate(condition_score_numeric = as.numeric(condition_score),condition_score_bin = case_when(condition_score == 1 ~ "1", condition_score == 2 ~"2",condition_score == 3 ~ "3", condition_score == 4 ~"4",condition_score == 5 ~ "5", condition_score == 6 ~"6",condition_score == 7 ~ "7", condition_score == 8 ~"8", condition_score ==9 ~"9", TRUE ~ as.character(condition_score))) %>%
group_by(site, month, year, condition_score_bin) %>% dplyr::summarise(Count= n()) %>%
ungroup() %>%
mutate(Proportion = Count/sum(Count))
GOLD_BCS_proportions<- na.omit(GOLD_BCS_proportions)
BCS_proportion_GOLD <- ggplot(data=GOLD_BCS_proportions, aes(x=month, y= Proportion, fill=condition_score_bin)) +
geom_bar(width = .5, stat="identity", position = "fill", colour = "black")+
theme_bw() +  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))+
labs(title="Gold Star Beach Proportion of body condition scores", x ="month", y = "Proportion of body condition scores ")+ theme(axis.title.y = element_text(size = rel(1.3), angle =90), axis.title.x = element_text(size = rel(1.3), angle = 0))+
theme(axis.text=element_text(size=12))+
scale_fill_brewer(palette = "Blues", direction = -1)+
facet_wrap(~ year)
BCS_proportion_GOLD
pdf(paste0(path = "Lab_Data_TissueProcessing/output" ,"/GOLD_BCS_proportion.pdf"), height = 7, width = 13)
print(BCS_proportion_GOLD)
dev.off()
df_GOLD
GOLD_precent_greater_3 <- df_GOLD %>%
dplyr::group_by(month, site, year) %>%
dplyr::summarise(Percentage = mean(condition_score <= 3)*100)
GOLD_precent_greater_3
GOLD_BCS_percentage <- GOLD_precent_greater_3 %>%
ggplot(aes(x = month, y = Percentage)) +
#geom_bar(width = 0.5, stat = "identity", position = "fill") +
geom_col()+
theme_bw() +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1),
axis.title.y = element_text(size = rel(1.3), angle = 90),
axis.title.x = element_text(size = rel(1.3), angle = 0),
axis.text = element_text(size = 12)
) +
labs(
title = "Gold Star Beach % of body condition scores >= 3",
x = "month",
y = "Percentage of body condition scores >= 3"
) +facet_wrap(~year)
#+ scale_x_continuous( breaks = seq(5,12, by =1) )+
#ylim(0,60)+
#scale_y_continuous(limits = c(0,100), breaks = seq(0,100, by = 10))
GOLD_BCS_percentage
pdf(paste0(path = "Lab_Data_TissueProcessing/output", "/GOLD_BCS_percentage.pdf"),height = 7, width = 13)
print(GOLD_BCS_percentage)
dev.off()
ggplot(data=df_GOLD, aes(x=month, y=height_mm, group= month)) +
geom_boxplot()+  #scale_fill_manual(values=c("forestgreen","orange", "purple"))+
theme_bw() +  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
#theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
labs(title="Goldstar Beach Mean Shell Height ", x ="month", y = "Mean Shell Height (mm)") + #scale_x_continuous(limits= c(4,11), breaks = seq(5,10, by =1))+
geom_smooth(method = "lm", se = FALSE)+ facet_wrap(~year)
#Condition distribution across all sample months - 2023
ggplot(data=df_GOLD2023, aes(x= condition)) +
geom_bar()+  #scale_fill_manual(values=c("forestgreen","orange", "purple"))+
theme_bw() +  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
#theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
labs(title="Goldstar Beach  Body Condition Score - 2023 ", x ="Condition categorization")+
facet_wrap(~ month, scales = "free")
#Condition distribution across all sample months - 2024
ggplot(data=df_GOLD2024, aes(x= condition)) +
geom_bar()+  #scale_fill_manual(values=c("forestgreen","orange", "purple"))+
theme_bw() +  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
#theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
labs(title="Goldstar Beach  Body Condition Score - 2024", x ="Condition categorization")+
facet_wrap(~ month, scales = "free")
#Mean Body condition per month
ggplot(data=df_GOLD, aes(x= month, y= condition_score, group = month)) +
geom_boxplot()+  #scale_fill_manual(values=c("forestgreen","orange", "purple"))+
theme_bw() +  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
labs(title="Goldstar Beach  Mean Body Condition Score ", x ="month", y= " condition score (1-9)")+ scale_y_reverse() + facet_wrap(~year)
#theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
knitr::opts_chunk$set(echo = TRUE)
#knitr::opts_knit$set(root.dir = 'C:/Users/mariah.kachmar/documents/Github/EAD-ASEB_EPA_LISS_Disease_Surveillance') #Mariah's
knitr::opts_knit$set(root.dir = 'C:/Users/kyra.lenderman/documents/Github/EAD-ASEB_EPA_LISS_Disease_Surveillance') #Kyra's
#knitr::opts_knit$set(root.dir = 'C:/Users/sarina.dery/documents/Github/EAD-ASEB_EPA_LISS_Disease_Surveillance') #Sarina's
library("ggplot2")
library("readxl")
library("plyr")
library("dplyr")
library("Rmisc")
library("readr")
library("lubridate")
library("purrr")
library(reshape2)
library(stringr)
library("RColorBrewer")
data_all <- list.files(path = "Lab_Data_DNAQuantification/raw_data",                           # Identify all CSV files
pattern = "*.csv", full.names = TRUE) %>%
lapply(read_csv) %>%                              # Store all files in list
bind_rows                                         # Combine data sets into one data set
data_all                                            # Print data to RStudio console
as.data.frame(data_all)                            # Convert tibble to data.frame
data_all <- data_all %>% filter(!is.na('Sample Name'))
data_all<- data_all %>% select(c('Test Date', 'Sample Name', 'Original Sample Conc.', 'Original sample conc. units'))
data_all <- data_all %>% rename(Date = 'Test Date', Sample_ID = 'Sample Name', Concentration = 'Original Sample Conc.', Units = 'Original sample conc. units')
data_all
write.csv(data_all, "Master_files\\qubit_all_data.csv", row.names=FALSE)
#Determining mean/sd concentration of duplicate qubit runs
qubit_summary <- summarySE(data = data_all, measurevar = "Concentration", groupvars = c( "Sample_ID"))
qubit_summary <- qubit_summary %>% rename(mean_concentration_ng.uL = Concentration)
write.csv(qubit_summary, "Lab_Data_DNAQuantification//output\\qubit_summary.csv", row.names=FALSE)
#Percentage of standard deviations >10 for qubit
high_sd <- qubit_summary %>% filter(sd > 10) %>% nrow()
total_values <- nrow(qubit_summary)
percentage_highsd <- (high_sd/total_values) * 100
percentage_highsd
#Percentage of standard deviations >10 for qubit
high_sd <- qubit_summary %>% filter(sd > 10)
View(high_sd)
#Percentage of standard deviations >10 for qubit
high_sd <- qubit_summary %>% filter(sd > 10) %>% nrow() #creating number of rows that have sd # >10
percentage_highsd <- (high_sd/nrow(qubit_summary)) * 100
percentage_highsd
high_sd_list <- qubit_summary %>% filter(sd > 10) #creates list of which samples have high sd
View(high_sd_list)
#knitr::opts_chunk$set(echo = TRUE)
#knitr::opts_knit$set(root.dir = 'C:/Users/mariah.kachmar/documents/Github/EAD-ASEB_EPA_LISS_Disease_Surveillance') #Mariah's
knitr::opts_knit$set(root.dir = 'C:/Users/kyra.lenderman/documents/Github/EAD-ASEB_EPA_LISS_Disease_Surveillance') #Kyra's
library("ggplot2")
library("readxl")
library("plyr")
library("dplyr")
library("Rmisc")
library("readr")
library("lubridate")
library("purrr")
library("reshape2")
library("stringr")
library("RColorBrewer")
library("tidyr")
#data_all <- list.files(path = "Lab_Data_TissueProcessing/raw_data/Files_by_Month",                           # Identify all CSV files
# pattern = "*.csv", full.names = TRUE) %>%
#lapply(read_csv) %>%   # Store all files in list
#  bind_rows          # Combine data sets into one data set
#data_all                                            # Print data to RStudio console
#as.data.frame(data_all)  # Convert tibble to data.frame
#Filtering NAs and unnecessary columns
#data_all <- data_all %>% filter(!is.na(date_collected))
#data_all <- select(data_all, -light_regime, -oyster_zone)
#write.csv(data_all, "Master_files/tissue_processing_all_data.csv", row.names=FALSE)
##### USE THIS CODE TO MERGE DATA FILES - some of the files have columns that are not the same format (dates specifically), which was causing issues in merging. This code below should solve that problem. It converts all date columns to dates and m/d/y format #####
file_paths <- list.files(path = "Lab_Data_TissueProcessing/raw_data/Files_by_Month",
pattern = "*.csv", full.names = TRUE)
data_all <- lapply(file_paths, function(file_path) {
read_csv(file_path) %>%
mutate(
date_collected = as.Date(date_collected,format = "%m/%d/%Y"),
date_processed = as.Date(date_processed,format = "%m/%d/%Y"),
date_davidsons = as.Date(date_davidsons,format = "%m/%d/%Y"),
date_etoh = as.Date(date_etoh,format = "%m/%d/%Y")
)
}) %>%
bind_rows
as.data.frame(data_all)  # Convert tibble to data.frame
data_all <- data_all %>% filter(!is.na(date_collected))
#knitr::opts_chunk$set(echo = TRUE)
#knitr::opts_knit$set(root.dir = 'C:/Users/mariah.kachmar/documents/Github/EAD-ASEB_EPA_LISS_Disease_Surveillance') #Mariah's
knitr::opts_knit$set(root.dir = 'C:/Users/kyra.lenderman/documents/Github/EAD-ASEB_EPA_LISS_Disease_Surveillance') #Kyra's
library("ggplot2")
library("readxl")
library("plyr")
library("dplyr")
library("Rmisc")
library("readr")
library("lubridate")
library("purrr")
library("reshape2")
library("stringr")
library("RColorBrewer")
library("tidyr")
#data_all <- list.files(path = "Lab_Data_TissueProcessing/raw_data/Files_by_Month",                           # Identify all CSV files
# pattern = "*.csv", full.names = TRUE) %>%
#lapply(read_csv) %>%   # Store all files in list
#  bind_rows          # Combine data sets into one data set
#data_all                                            # Print data to RStudio console
#as.data.frame(data_all)  # Convert tibble to data.frame
#Filtering NAs and unnecessary columns
#data_all <- data_all %>% filter(!is.na(date_collected))
#data_all <- select(data_all, -light_regime, -oyster_zone)
#write.csv(data_all, "Master_files/tissue_processing_all_data.csv", row.names=FALSE)
##### USE THIS CODE TO MERGE DATA FILES - some of the files have columns that are not the same format (dates specifically), which was causing issues in merging. This code below should solve that problem. It converts all date columns to dates and m/d/y format #####
file_paths <- list.files(path = "Lab_Data_TissueProcessing/raw_data/Files_by_Month",
pattern = "*.csv", full.names = TRUE)
data_all <- lapply(file_paths, function(file_path) {
read_csv(file_path) %>%
mutate(
date_collected = as.Date(date_collected,format = "%m/%d/%Y"),
date_processed = as.Date(date_processed,format = "%m/%d/%Y"),
date_davidsons = as.Date(date_davidsons,format = "%m/%d/%Y"),
date_etoh = as.Date(date_etoh,format = "%m/%d/%Y")
)
}) %>%
bind_rows
as.data.frame(data_all)  # Convert tibble to data.frame
data_all <- data_all %>% filter(!is.na(date_collected))
data_all <- select(data_all, -light_regime, -oyster_zone)
View(data_all)
write.csv(data_all, "Master_files/tissue_processing_all_data.csv", row.names=FALSE)
#knitr::opts_chunk$set(echo = TRUE)
#knitr::opts_knit$set(root.dir = 'C:/Users/mariah.kachmar/documents/Github/EAD-ASEB_EPA_LISS_Disease_Surveillance') #Mariah's
knitr::opts_knit$set(root.dir = 'C:/Users/kyra.lenderman/documents/Github/EAD-ASEB_EPA_LISS_Disease_Surveillance') #Kyra's
library("ggplot2")
library("readxl")
library("plyr")
library("dplyr")
library("Rmisc")
library("readr")
library("lubridate")
library("purrr")
library("reshape2")
library("stringr")
library("RColorBrewer")
library("tidyr")
#data_all <- list.files(path = "Lab_Data_TissueProcessing/raw_data/Files_by_Month",                           # Identify all CSV files
# pattern = "*.csv", full.names = TRUE) %>%
#lapply(read_csv) %>%   # Store all files in list
#  bind_rows          # Combine data sets into one data set
#data_all                                            # Print data to RStudio console
#as.data.frame(data_all)  # Convert tibble to data.frame
#Filtering NAs and unnecessary columns
#data_all <- data_all %>% filter(!is.na(date_collected))
#data_all <- select(data_all, -light_regime, -oyster_zone)
#write.csv(data_all, "Master_files/tissue_processing_all_data.csv", row.names=FALSE)
##### USE THIS CODE TO MERGE DATA FILES - some of the files have columns that are not the same format (dates specifically), which was causing issues in merging. This code below should solve that problem. It converts all date columns to dates and m/d/y format #####
file_paths <- list.files(path = "Lab_Data_TissueProcessing/raw_data/Files_by_Month",
pattern = "*.csv", full.names = TRUE)
data_all <- lapply(file_paths, function(file_path) {
read_csv(file_path) %>%
mutate(
date_collected = as.Date(date_collected,format = "%m/%d/%Y"),
date_processed = as.Date(date_processed,format = "%m/%d/%Y"),
date_davidsons = as.Date(date_davidsons,format = "%m/%d/%Y"),
date_etoh = as.Date(date_etoh,format = "%m/%d/%Y")
)
}) %>%
bind_rows
as.data.frame(data_all)  # Convert tibble to data.frame
data_all <- data_all %>% filter(!is.na(date_collected))
data_all <- select(data_all, -light_regime, -oyster_zone)
View(data_all)
write.csv(data_all, "Master_files/tissue_processing_all_data.csv", row.names=FALSE)
#knitr::opts_chunk$set(echo = TRUE)
#knitr::opts_knit$set(root.dir = 'C:/Users/mariah.kachmar/documents/Github/EAD-ASEB_EPA_LISS_Disease_Surveillance') #Mariah's
knitr::opts_knit$set(root.dir = 'C:/Users/kyra.lenderman/documents/Github/EAD-ASEB_EPA_LISS_Disease_Surveillance') #Kyra's
library("ggplot2")
library("readxl")
library("plyr")
library("dplyr")
library("Rmisc")
library("readr")
library("lubridate")
library("purrr")
library("reshape2")
library("stringr")
library("RColorBrewer")
library("tidyr")
#data_all <- list.files(path = "Lab_Data_TissueProcessing/raw_data/Files_by_Month",                           # Identify all CSV files
# pattern = "*.csv", full.names = TRUE) %>%
#lapply(read_csv) %>%   # Store all files in list
#  bind_rows          # Combine data sets into one data set
#data_all                                            # Print data to RStudio console
#as.data.frame(data_all)  # Convert tibble to data.frame
#Filtering NAs and unnecessary columns
#data_all <- data_all %>% filter(!is.na(date_collected))
#data_all <- select(data_all, -light_regime, -oyster_zone)
#write.csv(data_all, "Master_files/tissue_processing_all_data.csv", row.names=FALSE)
##### USE THIS CODE TO MERGE DATA FILES - some of the files have columns that are not the same format (dates specifically), which was causing issues in merging. This code below should solve that problem. It converts all date columns to dates and m/d/y format #####
file_paths <- list.files(path = "Lab_Data_TissueProcessing/raw_data/Files_by_Month",
pattern = "*.csv", full.names = TRUE)
data_all <- lapply(file_paths, function(file_path) {
read_csv(file_path) %>%
mutate(
date_collected = as.Date(date_collected,format = "%m/%d/%Y"),
date_processed = as.Date(date_processed,format = "%m/%d/%Y"),
date_davidsons = as.Date(date_davidsons,format = "%m/%d/%Y"),
date_etoh = as.Date(date_etoh,format = "%m/%d/%Y")
)
}) %>%
bind_rows
as.data.frame(data_all)  # Convert tibble to data.frame
data_all <- data_all %>% filter(!is.na(date_collected))
data_all <- select(data_all, -light_regime, -oyster_zone)
View(data_all)
write.csv(data_all, "Master_files/tissue_processing_all_data.csv", row.names=FALSE)
